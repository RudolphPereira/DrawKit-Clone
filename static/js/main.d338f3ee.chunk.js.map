{"version":3,"sources":["components/Cards.js","components/Home.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Cards","className","Home","type","placeholder","src","alt","Nav","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iSAWeA,MARf,WACE,OACE,yBAAKC,UAAU,SACb,sC,MC+DSC,MAlEf,WACE,OACE,6BACE,6BAASD,UAAU,QACjB,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,qBAAd,kDAGA,uBAAGA,UAAU,oBACX,gDADF,sFAIA,0BAAMA,UAAU,oBACd,sEACA,2BACEE,KAAK,OACLF,UAAU,oBACVG,YAAY,6BAEd,4BAAQH,UAAU,sBAAlB,UAIJ,yBAAKA,UAAU,qBACb,yBACEI,IAAI,kHACJC,IAAI,OACJL,UAAU,wBAKhB,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,oBACb,6EAGF,yBAAKA,UAAU,2BACb,yBACEI,IAAI,iHACJC,IAAI,WAEN,yBACED,IAAI,iHACJC,IAAI,WAEN,yBACED,IAAI,mHACJC,IAAI,aAEN,yBACED,IAAI,mHACJC,IAAI,aAEN,yBACED,IAAI,iHACJC,IAAI,gB,MCjCHC,MAxBf,WACE,OACE,yBAAKN,UAAU,OACb,yBACEI,IAAI,yGACJC,IAAI,OACJL,UAAU,cAGZ,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,cAAd,iBACA,wBAAIA,UAAU,cAAd,SACA,wBAAIA,UAAU,cAAd,YACA,wBAAIA,UAAU,aACZ,uBAAGA,UAAU,oBAEf,wBAAIA,UAAU,aACZ,uBAAGA,UAAU,yBCJRO,MAVf,WACE,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d338f3ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\nfunction Cards() {\r\n  return (\r\n    <div className=\"Cards\">\r\n      <h1>Helo</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <section className=\"home\">\r\n        <div className=\"home__hero--contentTop\">\r\n          <div className=\"home__hero--left\">\r\n            <h1 className=\"home__hero--title\">\r\n              Beautiful, free illustrations. Updated weekly.\r\n            </h1>\r\n            <p className=\"home__hero--desc\">\r\n              <span>Now 100% free!</span> Hand-drawn vector illustration and\r\n              icon resources, perfect for your next project.\r\n            </p>\r\n            <form className=\"home__hero--form\">\r\n              <p>Sign up for free weekly illustrations: </p>\r\n              <input\r\n                type=\"text\"\r\n                className=\"home__hero--input\"\r\n                placeholder=\"Enter your email address\"\r\n              />\r\n              <button className=\"home__hero--button\">Join</button>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"home__hero--right\">\r\n            <img\r\n              src=\"https://global-uploads.webflow.com/5bcb46130508ef456a7b2930/5c329258ff1c074ddb9fb342_drawkit-hero-animation.gif\"\r\n              alt=\"hero\"\r\n              className=\"home__hero--image\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"home__hero--contentBottom\">\r\n          <div className=\"home__hero--text\">\r\n            <p>Trusted by these fine companies and many more</p>\r\n          </div>\r\n\r\n          <div className=\"home__hero--brandimages\">\r\n            <img\r\n              src=\"https://global-uploads.webflow.com/5bcb46130508ef456a7b2930/5c7120fa2d05cec571969c2d_google-logo-export-v1.png\"\r\n              alt=\"google\"\r\n            />\r\n            <img\r\n              src=\"https://global-uploads.webflow.com/5bcb46130508ef456a7b2930/5c71210dc6a0652e7a79e8ac_amazon-logo-export-v1.png\"\r\n              alt=\"amazon\"\r\n            />\r\n            <img\r\n              src=\"https://global-uploads.webflow.com/5bcb46130508ef456a7b2930/5c7121203f8bb20f5623ca81_invision-logo-export-v1.png\"\r\n              alt=\"invision\"\r\n            />\r\n            <img\r\n              src=\"https://global-uploads.webflow.com/5bcb46130508ef456a7b2930/5ccb89c56c2f6e7f2e20e8cc_typeform-logo-export-v1.png\"\r\n              alt=\"typeform\"\r\n            />\r\n            <img\r\n              src=\"https://global-uploads.webflow.com/5bcb46130508ef456a7b2930/5c71212e6e5e68afc3eab981_toptal-logo-export-v1.png\"\r\n              alt=\"toptal\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <img\r\n        src=\"https://global-uploads.webflow.com/5bcb46130508ef456a7b2930/5bf413a0903391cd594d9321_logo-export-5.png\"\r\n        alt=\"logo\"\r\n        className=\"nav__logo\"\r\n      />\r\n\r\n      <ul className=\"nav__list\">\r\n        <li className=\"nav__items\">ILLUSTRATIONS</li>\r\n        <li className=\"nav__items\">ICONS</li>\r\n        <li className=\"nav__items\">REQUESTS</li>\r\n        <li className=\"nav__icon\">\r\n          <i className=\"fab fa-twitter\"></i>\r\n        </li>\r\n        <li className=\"nav__icon\">\r\n          <i className=\"fab fa-instagram\"></i>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards\";\nimport Home from \"./components/Home\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Home />\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}